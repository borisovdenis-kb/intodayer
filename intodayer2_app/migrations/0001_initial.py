# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-04-05 18:28
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, max_length=1000, upload_to='users_avatars/')),
                ('phone', models.CharField(blank=True, max_length=12)),
                ('chat_id', models.CharField(blank=True, max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DaysOfWeek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'day_of_weeks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Invitations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('confirmed_yn', models.CharField(blank=True, max_length=1, null=True)),
                ('from_user', models.ForeignKey(db_column='from_user', on_delete=django.db.models.deletion.DO_NOTHING, related_name='invitations_from_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'invitations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Places',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'places',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PlanLists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('description', models.TextField(max_length=1000)),
                ('start_date', models.DateTimeField()),
                ('avatar', models.ImageField(blank=True, max_length=1000, upload_to='plans_avatars/')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'plan_lists',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PlanRows',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parity', models.IntegerField(verbose_name=django.db.models.deletion.DO_NOTHING)),
                ('start_week', models.IntegerField()),
                ('end_week', models.IntegerField()),
                ('comment', models.CharField(max_length=256)),
                ('day_of_week', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.DaysOfWeek')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.Places')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.PlanLists')),
            ],
            options={
                'db_table': 'plan_rows',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PlanRowsTemporal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parity', models.BooleanField()),
                ('start_week', models.IntegerField()),
                ('end_week', models.IntegerField()),
                ('comment', models.CharField(max_length=256)),
                ('day_of_week', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.DaysOfWeek')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.Places')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.PlanLists')),
            ],
            options={
                'db_table': 'plan_rows_tmp',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.PlanLists')),
            ],
            options={
                'db_table': 'subjects',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Teachers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_short', models.CharField(blank=True, max_length=255, null=True)),
                ('name_full', models.CharField(blank=True, max_length=255, null=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.PlanLists')),
            ],
            options={
                'db_table': 'teachers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Times',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hh24mm', models.TimeField()),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.PlanLists')),
            ],
            options={
                'db_table': 'times',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserPlans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_yn', models.CharField(max_length=1)),
                ('always_yn', models.CharField(max_length=1)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.PlanLists')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_plans',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='planrowstemporal',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.Subjects'),
        ),
        migrations.AddField(
            model_name='planrowstemporal',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.Teachers'),
        ),
        migrations.AddField(
            model_name='planrowstemporal',
            name='time',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.Times'),
        ),
        migrations.AddField(
            model_name='planrows',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.Subjects'),
        ),
        migrations.AddField(
            model_name='planrows',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.Teachers'),
        ),
        migrations.AddField(
            model_name='planrows',
            name='time',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.Times'),
        ),
        migrations.AddField(
            model_name='places',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.PlanLists'),
        ),
        migrations.AddField(
            model_name='invitations',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='intodayer2_app.PlanLists'),
        ),
        migrations.AddField(
            model_name='invitations',
            name='to_user',
            field=models.ForeignKey(db_column='to_user', on_delete=django.db.models.deletion.DO_NOTHING, related_name='invitations_to_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='invitations',
            unique_together=set([('from_user', 'to_user')]),
        ),
    ]
