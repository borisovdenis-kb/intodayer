# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey has `on_delete` set to the desired behavior.
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from __future__ import unicode_literals

from django.db import models


class Cathedras(models.Model):
    cthd_id = models.IntegerField(primary_key=True)
    fclt_fclt = models.ForeignKey('Faculties', models.DO_NOTHING, blank=True, null=True)
    name = models.CharField(max_length=128, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'cathedras'


class DayOfWeeks(models.Model):
    dfwk_id = models.BooleanField(primary_key=True)
    name = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'day_of_weeks'


class Faculties(models.Model):
    fclt_id = models.IntegerField(primary_key=True)
    unvr_unvr = models.ForeignKey('Universities', models.DO_NOTHING, blank=True, null=True)
    name = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'faculties'


class Groups(models.Model):
    grp_id = models.IntegerField(primary_key=True)
    fclt_fclt = models.ForeignKey(Faculties, models.DO_NOTHING)
    name = models.CharField(max_length=255)
    full_def = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'groups'


class Schedules(models.Model):
    schld_id = models.IntegerField(primary_key=True)
    grp_grp = models.ForeignKey(Groups, models.DO_NOTHING, blank=True, null=True)
    cthd_cthd = models.ForeignKey(Cathedras, models.DO_NOTHING, blank=True, null=True)
    parity = models.NullBooleanField()
    dfwk_dfwk = models.ForeignKey(DayOfWeeks, models.DO_NOTHING, blank=True, null=True)
    tms_tms = models.ForeignKey('Times', models.DO_NOTHING, blank=True, null=True)
    subj_subj = models.ForeignKey('Subjects', models.DO_NOTHING, blank=True, null=True)
    tchr_tchr = models.ForeignKey('Teachers', models.DO_NOTHING, blank=True, null=True)
    place = models.CharField(max_length=50, blank=True, null=True)
    start_week = models.IntegerField(blank=True, null=True)
    end_week = models.IntegerField(blank=True, null=True)
    comment = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'schedules'


class SchedulesSpecial(models.Model):
    schld_s_id = models.IntegerField(primary_key=True)
    date_of = models.DateField(blank=True, null=True)
    grp_grp = models.ForeignKey(Groups, models.DO_NOTHING, blank=True, null=True)
    cthd_cthd = models.ForeignKey(Cathedras, models.DO_NOTHING, blank=True, null=True)
    parity = models.NullBooleanField()
    dfwk = models.ForeignKey(DayOfWeeks, models.DO_NOTHING, blank=True, null=True)
    tms_tms = models.ForeignKey('Times', models.DO_NOTHING, blank=True, null=True)
    subj_subj = models.ForeignKey('Subjects', models.DO_NOTHING, blank=True, null=True)
    tchr_tchr = models.ForeignKey('Teachers', models.DO_NOTHING, blank=True, null=True)
    place = models.CharField(max_length=50, blank=True, null=True)
    start_week = models.IntegerField(blank=True, null=True)
    end_week = models.IntegerField(blank=True, null=True)
    comment = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'schedules_special'


class Students(models.Model):
    stdt_id = models.IntegerField(primary_key=True)
    admission_year = models.IntegerField(blank=True, null=True)
    grp_grp = models.ForeignKey(Groups, models.DO_NOTHING, blank=True, null=True)
    cthd_cthd = models.ForeignKey(Cathedras, models.DO_NOTHING, blank=True, null=True)
    nave_date = models.DateField(blank=True, null=True)
    navi_user = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'students'


class Subjects(models.Model):
    subj_id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'subjects'


class Teachers(models.Model):
    tchr_id = models.IntegerField(primary_key=True)
    name_short = models.CharField(max_length=255, blank=True, null=True)
    name_full = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'teachers'


class Times(models.Model):
    tms_id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'times'


class Universities(models.Model):
    unvr_id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'universities'


class Users(models.Model):
    usr_id = models.IntegerField(primary_key=True)
    stdt_stdt = models.ForeignKey(Students, models.DO_NOTHING, blank=True, null=True)
    first_name = models.CharField(max_length=255, blank=True, null=True)
    last_name = models.CharField(max_length=255, blank=True, null=True)
    phone = models.IntegerField(blank=True, null=True)
    delivery_yn = models.CharField(max_length=1, blank=True, null=True)
    pass_hash = models.CharField(max_length=255, blank=True, null=True)
    navi_date = models.DateField(blank=True, null=True)
    navi_user = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'users'
